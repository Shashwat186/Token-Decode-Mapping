{
    "transfer_functions": {
      "transfer": {
        "description": "Transfers `amount` tokens from the caller's account to `dst`.",
        "fields": {
          "dst": "_dst",
          "amount": "_amount"
        }
      },
      "transferFrom": {
        "description": "Transfers `amount` tokens from `src` to `dst` using the allowance mechanism.",
        "fields": {
          "src": "_src",
          "dst": "_dst",
          "amount": "_amount"
        }
      }
    },
    "other_functions": {
      "constructor": {
        "description": "Initializes the contract with the given parameters.",
        "fields": {
          "_governance": "_governance",
          "pendleTeamTokens": "_pendleTeamTokens",
          "pendleEcosystemFund": "_pendleEcosystemFund",
          "salesMultisig": "_salesMultisig",
          "_liquidityIncentivesRecipient": "_liquidityIncentivesRecipient"
        }
      },
      "allowance": {
        "description": "Returns the amount of tokens that `spender` is allowed to spend on behalf of `account`.",
        "fields": {
          "account": "_account",
          "spender": "_spender"
        }
      },
      "approve": {
        "description": "Sets the amount of tokens that `spender` is allowed to spend on behalf of the caller.",
        "fields": {
          "spender": "_spender",
          "amount": "_amount"
        }
      },
      "balanceOf": {
        "description": "Returns the balance of `account`.",
        "fields": {
          "account": "_account"
        }
      },
      "burn": {
        "description": "Burns `amount` tokens from the caller's account.",
        "fields": {
          "amount": "_amount"
        }
      },
      "claimGovernance": {
        "description": "Claims the governance role.",
        "fields": {}
      },
      "claimLiquidityEmissions": {
        "description": "Claims liquidity emissions and returns the total amount of emissions.",
        "fields": {}
      },
      "applyConfigChanges": {
        "description": "Applies the pending configuration changes.",
        "fields": {}
      },
      "initiateConfigChanges": {
        "description": "Initiates changes to the configuration parameters.",
        "fields": {
          "_emissionRateMultiplierNumerator": "_emissionRateMultiplierNumerator",
          "_terminalInflationRateNumerator": "_terminalInflationRateNumerator",
          "_liquidityIncentivesRecipient": "_liquidityIncentivesRecipient",
          "_isBurningAllowed": "_isBurningAllowed"
        }
      },
      "withdrawEther": {
        "description": "Withdraws `amount` of Ether to the specified address.",
        "fields": {
          "amount": "_amount",
          "sendTo": "_sendTo"
        }
      },
      "withdrawToken": {
        "description": "Withdraws `amount` of tokens from the contract to the specified address.",
        "fields": {
          "token": "_token",
          "amount": "_amount",
          "sendTo": "_sendTo"
        }
      },
      "delegate": {
        "description": "Delegates voting power to `delegatee`.",
        "fields": {
          "delegatee": "_delegatee"
        }
      },
      "delegateBySig": {
        "description": "Delegates voting power to `delegatee` using a signature.",
        "fields": {
          "delegatee": "_delegatee",
          "nonce": "_nonce",
          "expiry": "_expiry",
          "v": "_v",
          "r": "_r",
          "s": "_s"
        }
      },
      "getCurrentVotes": {
        "description": "Returns the current voting power of `account`.",
        "fields": {
          "account": "_account"
        }
      },
      "getPriorVotes": {
        "description": "Returns the voting power of `account` at the specified block number.",
        "fields": {
          "account": "_account",
          "blockNumber": "_blockNumber"
        }
      },
      "transferGovernance": {
        "description": "Transfers governance to a new address.",
        "fields": {
          "_governance": "_governance"
        }
      },
      "configChangesInitiated": {
        "description": "Returns the timestamp of the initiated configuration changes.",
        "fields": {}
      },
      "isBurningAllowed": {
        "description": "Returns whether burning is allowed.",
        "fields": {}
      },
      "isPendleToken": {
        "description": "Returns whether the token is a Pendle token.",
        "fields": {}
      },
      "name": {
        "description": "Returns the name of the token.",
        "fields": {}
      },
      "symbol": {
        "description": "Returns the symbol of the token.",
        "fields": {}
      },
      "decimals": {
        "description": "Returns the number of decimal places of the token.",
        "fields": {}
      },
      "totalSupply": {
        "description": "Returns the total supply of the token.",
        "fields": {}
      },
      "startTime": {
        "description": "Returns the start time of the contract.",
        "fields": {}
      },
      "domainTypehash": {
        "description": "Returns the domain typehash.",
        "fields": {}
      },
      "delegationTypehash": {
        "description": "Returns the delegation typehash.",
        "fields": {}
      }
    }
  }
  
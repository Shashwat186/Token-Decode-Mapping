{
  "transfer_functions": {
    "approve": {
      "description": "Sets the amount of tokens that an owner allows a spender to use.",
      "fields": {
        "spender": "_spender",
        "amount": "_amount"
      }
    },
    "transfer": {
      "description": "Transfers tokens from the caller to the specified recipient.",
      "fields": {
        "recipient": "_recipient",
        "amount": "_amount"
      }
    },
    "transferFrom": {
      "description": "Transfers tokens from one address to another using the allowance mechanism.",
      "fields": {
        "sender": "_sender",
        "recipient": "_recipient",
        "amount": "_amount"
      }
    },
    "increaseAllowance": {
      "description": "Increases the allowance that a spender has on the owner's tokens.",
      "fields": {
        "spender": "_spender",
        "addedValue": "_addedValue"
      }
    },
    "decreaseAllowance": {
      "description": "Decreases the allowance that a spender has on the owner's tokens.",
      "fields": {
        "spender": "_spender",
        "subtractedValue": "_subtractedValue"
      }
    }
  },
  "other_functions": {
    "constructor": {
      "description": "Initializes the contract with the RocketStorageInterface address.",
      "fields": {
        "_rocketStorageAddress": "_rocketStorageAddress"
      }
    },
    "balanceOf": {
      "description": "Returns the token balance of a given address.",
      "fields": {
        "account": "_account"
      }
    },
    "allowance": {
      "description": "Returns the amount of tokens that a spender is allowed to spend on behalf of an owner.",
      "fields": {
        "owner": "_owner",
        "spender": "_spender"
      }
    },
    "burn": {
      "description": "Burns a specified amount of tokens from the caller's account.",
      "fields": {
        "_rethAmount": "_rethAmount"
      }
    },
    "depositExcess": {
      "description": "Allows the caller to deposit excess Ether.",
      "fields": {}
    },
    "depositExcessCollateral": {
      "description": "Allows the caller to deposit excess collateral.",
      "fields": {}
    },
    "getCollateralRate": {
      "description": "Returns the current collateral rate.",
      "fields": {}
    },
    "getEthValue": {
      "description": "Returns the Ether value of a specified amount of tokens.",
      "fields": {
        "_rethAmount": "_rethAmount"
      }
    },
    "getExchangeRate": {
      "description": "Returns the current exchange rate between tokens and Ether.",
      "fields": {}
    },
    "getRethValue": {
      "description": "Returns the token value of a specified amount of Ether.",
      "fields": {
        "_ethAmount": "_ethAmount"
      }
    },
    "getTotalCollateral": {
      "description": "Returns the total amount of collateral held.",
      "fields": {}
    },
    "mint": {
      "description": "Mints new tokens and assigns them to a specified address.",
      "fields": {
        "_ethAmount": "_ethAmount",
        "_to": "_to"
      }
    },
    "name": {
      "description": "Returns the name of the token.",
      "fields": {}
    },
    "symbol": {
      "description": "Returns the symbol of the token.",
      "fields": {}
    },
    "totalSupply": {
      "description": "Returns the total supply of tokens.",
      "fields": {}
    },
    "version": {
      "description": "Returns the version of the contract.",
      "fields": {}
    },
    "receive": {
      "description": "Fallback function to receive Ether.",
      "fields": {}
    }
  }
}

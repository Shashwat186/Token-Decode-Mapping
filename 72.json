{
    "transfer_functions": {
      "transfer": {
        "description": "Transfers `value` amount of tokens to address `to`.",
        "fields": {
          "to": "_to",
          "value": "_value"
        }
      },
      "transferFrom": {
        "description": "Transfers `value` amount of tokens from address `from` to address `to`.",
        "fields": {
          "from": "_from",
          "to": "_to",
          "value": "_value"
        }
      },
      "approve": {
        "description": "Allows `spender` to spend `value` amount of tokens on behalf of the caller.",
        "fields": {
          "spender": "_spender",
          "value": "_value"
        }
      },
      "increaseAllowance": {
        "description": "Increases the allowance of `spender` by `addedValue`.",
        "fields": {
          "spender": "_spender",
          "addedValue": "_addedValue"
        }
      },
      "decreaseAllowance": {
        "description": "Decreases the allowance of `spender` by `subtractedValue`.",
        "fields": {
          "spender": "_spender",
          "subtractedValue": "_subtractedValue"
        }
      }
    },
    "other_functions": {
      "name": {
        "description": "Returns the name of the token.",
        "fields": {}
      },
      "symbol": {
        "description": "Returns the symbol of the token.",
        "fields": {}
      },
      "decimals": {
        "description": "Returns the number of decimals used by the token.",
        "fields": {}
      },
      "totalSupply": {
        "description": "Returns the total supply of tokens.",
        "fields": {}
      },
      "balanceOf": {
        "description": "Returns the balance of `owner`.",
        "fields": {
          "owner": "_owner"
        }
      },
      "allowance": {
        "description": "Returns the remaining number of tokens that `spender` is allowed to spend on behalf of `owner`.",
        "fields": {
          "owner": "_owner",
          "spender": "_spender"
        }
      },
      "paused": {
        "description": "Returns whether the contract is paused.",
        "fields": {}
      },
      "isPauser": {
        "description": "Returns whether the `account` is a pauser.",
        "fields": {
          "account": "_account"
        }
      },
      "addPauser": {
        "description": "Adds `account` as a pauser.",
        "fields": {
          "account": "_account"
        }
      },
      "renouncePauser": {
        "description": "Renounces the pauser role for the caller.",
        "fields": {}
      },
      "unpause": {
        "description": "Unpauses the contract.",
        "fields": {}
      },
      "pause": {
        "description": "Pauses the contract.",
        "fields": {}
      }
    }
  }
  
{
    "transfer_functions": {
      "allowance": {
        "description": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner`.",
        "fields": {
          "owner": "address",
          "spender": "address"
        }
      },
      "approve": {
        "description": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
        "fields": {
          "spender": "address",
          "amount": "uint256"
        }
      },
      "decreaseAllowance": {
        "description": "Decreases the allowance granted to `spender` by the caller.",
        "fields": {
          "spender": "address",
          "subtractedValue": "uint256"
        }
      },
      "increaseAllowance": {
        "description": "Increases the allowance granted to `spender` by the caller.",
        "fields": {
          "spender": "address",
          "addedValue": "uint256"
        }
      },
      "transfer": {
        "description": "Moves `amount` tokens from the caller's account to `recipient`.",
        "fields": {
          "recipient": "address",
          "amount": "uint256"
        }
      },
      "transferFrom": {
        "description": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism.",
        "fields": {
          "sender": "address",
          "recipient": "address",
          "amount": "uint256"
        }
      }
    },
    "other_functions": {
      "constructor": {
        "description": "Initializes the contract with the given parameters.",
        "fields": {
          "name_": "string",
          "symbol_": "string",
          "predicate_": "address"
        }
      },
      "DEFAULT_ADMIN_ROLE": {
        "description": "Returns the default admin role.",
        "fields": {}
      },
      "ERC712_VERSION": {
        "description": "Returns the version of ERC712 being used.",
        "fields": {}
      },
      "PREDICATE_ROLE": {
        "description": "Returns the predicate role.",
        "fields": {}
      },
      "balanceOf": {
        "description": "Returns the amount of tokens owned by `account`.",
        "fields": {
          "account": "address"
        }
      },
      "decimals": {
        "description": "Returns the number of decimals used to get its user representation.",
        "fields": {}
      },
      "executeMetaTransaction": {
        "description": "Executes a meta transaction on behalf of `userAddress`.",
        "fields": {
          "userAddress": "address",
          "functionSignature": "bytes",
          "sigR": "bytes32",
          "sigS": "bytes32",
          "sigV": "uint8"
        }
      },
      "getChainId": {
        "description": "Returns the current chain ID.",
        "fields": {}
      },
      "getDomainSeperator": {
        "description": "Returns the domain separator.",
        "fields": {}
      },
      "getNonce": {
        "description": "Returns the nonce for `user`.",
        "fields": {
          "user": "address"
        }
      },
      "getRoleAdmin": {
        "description": "Returns the admin role that controls `role`.",
        "fields": {
          "role": "bytes32"
        }
      },
      "getRoleMember": {
        "description": "Returns the account at `index` for `role`.",
        "fields": {
          "role": "bytes32",
          "index": "uint256"
        }
      },
      "getRoleMemberCount": {
        "description": "Returns the number of members in `role`.",
        "fields": {
          "role": "bytes32"
        }
      },
      "grantRole": {
        "description": "Grants `role` to `account`.",
        "fields": {
          "role": "bytes32",
          "account": "address"
        }
      },
      "hasRole": {
        "description": "Returns `true` if `account` has been granted `role`.",
        "fields": {
          "role": "bytes32",
          "account": "address"
        }
      },
      "mint": {
        "description": "Mints `amount` tokens to `user`.",
        "fields": {
          "user": "address",
          "amount": "uint256"
        }
      },
      "name": {
        "description": "Returns the name of the token.",
        "fields": {}
      },
      "renounceRole": {
        "description": "Renounces `role` from the caller.",
        "fields": {
          "role": "bytes32",
          "account": "address"
        }
      },
      "revokeRole": {
        "description": "Revokes `role` from `account`.",
        "fields": {
          "role": "bytes32",
          "account": "address"
        }
      },
      "symbol": {
        "description": "Returns the symbol of the token.",
        "fields": {}
      },
      "totalSupply": {
        "description": "Returns the amount of tokens in existence.",
        "fields": {}
      },
      "meta_events": {
        "Approval": {
          "description": "Emitted when the allowance of a `spender` for an `owner` is set by a call to `approve`.",
          "fields": {
            "owner": "address",
            "spender": "address",
            "value": "uint256"
          }
        },
        "MetaTransactionExecuted": {
          "description": "Emitted when a meta transaction is executed.",
          "fields": {
            "userAddress": "address",
            "relayerAddress": "address payable",
            "functionSignature": "bytes"
          }
        },
        "RoleAdminChanged": {
          "description": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`.",
          "fields": {
            "role": "bytes32",
            "previousAdminRole": "bytes32",
            "newAdminRole": "bytes32"
          }
        },
        "RoleGranted": {
          "description": "Emitted when `account` is granted `role`.",
          "fields": {
            "role": "bytes32",
            "account": "address",
            "sender": "address"
          }
        },
        "RoleRevoked": {
          "description": "Emitted when `account` is revoked `role`.",
          "fields": {
            "role": "bytes32",
            "account": "address",
            "sender": "address"
          }
        },
        "Transfer": {
          "description": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`).",
          "fields": {
            "from": "address",
            "to": "address",
            "value": "uint256"
          }
        }
      }
    }
  }
  
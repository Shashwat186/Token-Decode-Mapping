{
    "transfer_functions": {
      "transfer": {
        "description": "Transfers value to the specified address.",
        "fields": {
          "to": "_to",
          "value": "_value"
        }
      },
      "transferFrom": {
        "description": "Transfers value from one address to another using allowance.",
        "fields": {
          "from": "_from",
          "to": "_to",
          "value": "_value"
        }
      },
      "approve": {
        "description": "Approves a spender to transfer a specified value on behalf of the caller.",
        "fields": {
          "spender": "_spender",
          "value": "_value"
        }
      },
      "burnSecondary": {
        "description": "Burns secondary tokens for a specified amount.",
        "fields": {
          "address": "_address",
          "value": "_value"
        }
      },
      "burnSynths": {
        "description": "Burns a specified amount of synths.",
        "fields": {
          "amount": "_amount"
        }
      },
      "burnSynthsOnBehalf": {
        "description": "Burns synths on behalf of another address.",
        "fields": {
          "burnForAddress": "_burnForAddress",
          "amount": "_amount"
        }
      },
      "burnSynthsToTarget": {
        "description": "Burns synths to reach a target amount.",
        "fields": {}
      },
      "burnSynthsToTargetOnBehalf": {
        "description": "Burns synths to target amount on behalf of another address.",
        "fields": {
          "burnForAddress": "_burnForAddress"
        }
      },
      "mint": {
        "description": "Mints new tokens.",
        "fields": {}
      },
      "emitAtomicSynthExchange": {
        "description": "Emits an event for an atomic synth exchange.",
        "fields": {
          "account": "_account",
          "fromCurrencyKey": "_fromCurrencyKey",
          "fromAmount": "_fromAmount",
          "toCurrencyKey": "_toCurrencyKey",
          "toAmount": "_toAmount",
          "toAddress": "_toAddress"
        }
      },
      "emitExchangeRebate": {
        "description": "Emits an event for an exchange rebate.",
        "fields": {
          "account": "_account",
          "currencyKey": "_currencyKey",
          "amount": "_amount"
        }
      },
      "emitExchangeReclaim": {
        "description": "Emits an event for an exchange reclaim.",
        "fields": {
          "account": "_account",
          "currencyKey": "_currencyKey",
          "amount": "_amount"
        }
      },
      "emitExchangeTracking": {
        "description": "Emits an event for exchange tracking.",
        "fields": {
          "trackingCode": "_trackingCode",
          "toCurrencyKey": "_toCurrencyKey",
          "toAmount": "_toAmount",
          "fee": "_fee"
        }
      },
      "emitSynthExchange": {
        "description": "Emits an event for a synth exchange.",
        "fields": {
          "account": "_account",
          "fromCurrencyKey": "_fromCurrencyKey",
          "fromAmount": "_fromAmount",
          "toCurrencyKey": "_toCurrencyKey",
          "toAmount": "_toAmount",
          "toAddress": "_toAddress"
        }
      },
      "exchange": {
        "description": "Exchanges a specified amount from one currency to another.",
        "fields": {
          "sourceCurrencyKey": "_sourceCurrencyKey",
          "sourceAmount": "_sourceAmount",
          "destinationCurrencyKey": "_destinationCurrencyKey"
        }
      },
      "exchangeAtomically": {
        "description": "Exchanges a specified amount from one currency to another atomically.",
        "fields": {
          "sourceCurrencyKey": "_sourceCurrencyKey",
          "sourceAmount": "_sourceAmount",
          "destinationCurrencyKey": "_destinationCurrencyKey",
          "trackingCode": "_trackingCode",
          "minAmount": "_minAmount"
        }
      },
      "exchangeOnBehalf": {
        "description": "Exchanges a specified amount from one currency to another on behalf of another address.",
        "fields": {
          "exchangeForAddress": "_exchangeForAddress",
          "sourceCurrencyKey": "_sourceCurrencyKey",
          "sourceAmount": "_sourceAmount",
          "destinationCurrencyKey": "_destinationCurrencyKey"
        }
      },
      "exchangeOnBehalfWithTracking": {
        "description": "Exchanges a specified amount from one currency to another on behalf of another address with tracking.",
        "fields": {
          "exchangeForAddress": "_exchangeForAddress",
          "sourceCurrencyKey": "_sourceCurrencyKey",
          "sourceAmount": "_sourceAmount",
          "destinationCurrencyKey": "_destinationCurrencyKey",
          "rewardAddress": "_rewardAddress",
          "trackingCode": "_trackingCode"
        }
      },
      "exchangeWithTracking": {
        "description": "Exchanges a specified amount from one currency to another with tracking.",
        "fields": {
          "sourceCurrencyKey": "_sourceCurrencyKey",
          "sourceAmount": "_sourceAmount",
          "destinationCurrencyKey": "_destinationCurrencyKey",
          "rewardAddress": "_rewardAddress",
          "trackingCode": "_trackingCode"
        }
      },
      "exchangeWithTrackingForInitiator": {
        "description": "Exchanges a specified amount from one currency to another with tracking for the initiator.",
        "fields": {
          "sourceCurrencyKey": "_sourceCurrencyKey",
          "sourceAmount": "_sourceAmount",
          "destinationCurrencyKey": "_destinationCurrencyKey",
          "rewardAddress": "_rewardAddress",
          "trackingCode": "_trackingCode"
        }
      },
      "exchangeWithVirtual": {
        "description": "Exchanges a specified amount from one currency to another with virtual synth.",
        "fields": {
          "sourceCurrencyKey": "_sourceCurrencyKey",
          "sourceAmount": "_sourceAmount",
          "destinationCurrencyKey": "_destinationCurrencyKey",
          "trackingCode": "_trackingCode"
        }
      },
      "mintSecondary": {
        "description": "Mints secondary tokens for a specified address.",
        "fields": {
          "address": "_address",
          "value": "_value"
        }
      },
      "mintSecondaryRewards": {
        "description": "Mints secondary rewards based on the specified amount.",
        "fields": {
          "amount": "_amount"
        }
      }
    },
    "other_functions": {
      "CONTRACT_NAME": {
        "description": "Returns the contract name.",
        "fields": {}
      },
      "DECIMALS": {
        "description": "Returns the number of decimals used by the token.",
        "fields": {}
      },
      "TOKEN_NAME": {
        "description": "Returns the token name.",
        "fields": {}
      },
      "TOKEN_SYMBOL": {
        "description": "Returns the token symbol.",
        "fields": {}
      },
      "acceptOwnership": {
        "description": "Accepts ownership of the contract.",
        "fields": {}
      },
      "allowance": {
        "description": "Returns the allowance a spender has for a specific owner.",
        "fields": {
          "owner": "_owner",
          "spender": "_spender"
        }
      },
      "anySynthOrSNXRateIsInvalid": {
        "description": "Checks if any synth or SNX rate is invalid.",
        "fields": {}
      },
      "availableCurrencyKeys": {
        "description": "Returns the available currency keys.",
        "fields": {}
      },
      "availableSynthCount": {
        "description": "Returns the count of available synths.",
        "fields": {}
      },
      "availableSynths": {
        "description": "Returns available synths at a specified index.",
        "fields": {
          "index": "_index"
        }
      },
      "balanceOf": {
        "description": "Returns the balance of a specific address.",
        "fields": {
          "account": "_account"
        }
      },
      "collateral": {
        "description": "Returns the collateral amount for a specific address.",
        "fields": {
          "account": "_account"
        }
      },
      "collateralisationRatio": {
        "description": "Returns the collateralisation ratio for a specific issuer.",
        "fields": {
          "_issuer": "_issuer"
        }
      },
      "debtBalanceOf": {
        "description": "Returns the debt balance for a specific address and currency key.",
        "fields": {
          "account": "_account",
          "currencyKey": "_currencyKey"
        }
      },
      "decimals": {
        "description": "Returns the decimal places used by the token.",
        "fields": {}
      },
      "getFirstNonZeroEscrowIndex": {
        "description": "Returns the first non-zero escrow index for an account.",
        "fields": {
          "account": "_account"
        }
      },
      "isResolverCached": {
        "description": "Checks if the resolver is cached.",
        "fields": {}
      },
      "isWaitingPeriod": {
        "description": "Checks if a currency is in a waiting period.",
        "fields": {
          "currencyKey": "_currencyKey"
        }
      },
      "issueMaxSynths": {
        "description": "Issues the maximum amount of synths.",
        "fields": {}
      },
      "issueMaxSynthsOnBehalf": {
        "description": "Issues the maximum amount of synths on behalf of another address.",
        "fields": {
          "issueForAddress": "_issueForAddress"
        }
      },
      "mintSecondary": {
        "description": "Mints secondary tokens for a specified address.",
        "fields": {
          "address": "_address",
          "value": "_value"
        }
      },
      "mintSecondaryRewards": {
        "description": "Mints secondary rewards for a specified amount.",
        "fields": {
          "amount": "_amount"
        }
      },
      "name": {
        "description": "Returns the name of the token.",
        "fields": {}
      },
      "nominateNewOwner": {
        "description": "Nominates a new owner for the contract.",
        "fields": {
          "owner": "_owner"
        }
      },
      "nominatedOwner": {
        "description": "Returns the nominated owner address.",
        "fields": {}
      },
      "owner": {
        "description": "Returns the current owner address.",
        "fields": {}
      },
      "proxy": {
        "description": "Returns the address of the proxy contract.",
        "fields": {}
      },
      "rebuildCache": {
        "description": "Rebuilds the cache.",
        "fields": {}
      },
      "remainingIssuableSynths": {
        "description": "Returns the remaining issuable synths for a specified account.",
        "fields": {
          "account": "_account"
        }
      },
      "resolver": {
        "description": "Returns the address of the address resolver contract.",
        "fields": {}
      },
      "resolverAddressesRequired": {
        "description": "Returns the addresses required by the resolver.",
        "fields": {}
      },
      "revokeAllEscrow": {
        "description": "Revokes all escrow for a specified address.",
        "fields": {
          "account": "_account"
        }
      },
      "sUSD": {
        "description": "Returns the sUSD currency key.",
        "fields": {}
      },
      "setMessageSender": {
        "description": "Sets the message sender address.",
        "fields": {
          "sender": "_sender"
        }
      },
      "setProxy": {
        "description": "Sets the address of the proxy contract.",
        "fields": {
          "_proxy": "_proxy"
        }
      },
      "setTokenState": {
        "description": "Sets the token state contract address.",
        "fields": {
          "_tokenState": "_tokenState"
        }
      },
      "settle": {
        "description": "Settles the specified currency.",
        "fields": {
          "currencyKey": "_currencyKey"
        }
      },
      "symbol": {
        "description": "Returns the symbol of the token.",
        "fields": {}
      },
      "synths": {
        "description": "Returns the synth contract address for a specified currency key.",
        "fields": {
          "currencyKey": "_currencyKey"
        }
      },
      "synthsByAddress": {
        "description": "Returns the currency key for a specified synth address.",
        "fields": {
          "synthAddress": "_synthAddress"
        }
      },
      "tokenState": {
        "description": "Returns the token state contract address.",
        "fields": {}
      },
      "totalIssuedSynths": {
        "description": "Returns the total amount of issued synths.",
        "fields": {
          "currencyKey": "_currencyKey"
        }
      },
      "totalIssuedSynthsExcludeOtherCollateral": {
        "description": "Returns the total issued synths excluding other collateral for a specified currency key.",
        "fields": {
          "currencyKey": "_currencyKey"
        }
      },
      "totalSupply": {
        "description": "Returns the total supply of the token.",
        "fields": {}
      }
    }
  }
  
{
    "transfer_functions": {
      "transfer": {
        "description": "Transfers `amount` tokens from the caller's account to the `recipient` address.",
        "fields": {
          "recipient": "_to",
          "amount": "_amount"
        }
      },
      "transferFrom": {
        "description": "Transfers `amount` tokens from `sender` to `recipient` using the allowance mechanism.",
        "fields": {
          "sender": "_sender",
          "recipient": "_recipient",
          "amount": "_amount"
        }
      },
      "approve": {
        "description": "Approves `spender` to spend `amount` tokens on behalf of the caller.",
        "fields": {
          "spender": "_spender",
          "amount": "_amount"
        }
      },
      "decreaseAllowance": {
        "description": "Decreases the allowance of `spender` by `subtractedValue`.",
        "fields": {
          "spender": "_spender",
          "subtractedValue": "_subtractedValue"
        }
      },
      "increaseAllowance": {
        "description": "Increases the allowance of `spender` by `addedValue`.",
        "fields": {
          "spender": "_spender",
          "addedValue": "_addedValue"
        }
      },
      "mint": {
        "description": "Mints `amount` new tokens to the `recipient` address.",
        "fields": {
          "recipient": "_to",
          "amount": "_amount"
        }
      },
      "burn": {
        "description": "Burns `amount` tokens from the caller's account.",
        "fields": {
          "amount": "_amount"
        }
      },
      "burnFrom": {
        "description": "Burns `amount` tokens from `account`.",
        "fields": {
          "account": "_account",
          "amount": "_amount"
        }
      }
    },
    "other_functions": {
      "constructor": {
        "description": "Initializes the contract with the given name, ticker, and cap.",
        "fields": {
          "_name": "_name",
          "_ticker": "_ticker",
          "_cap": "_cap"
        }
      },
      "DELEGATION_TYPEHASH": {
        "description": "Returns the typehash for the delegation.",
        "fields": {}
      },
      "DOMAIN_TYPEHASH": {
        "description": "Returns the typehash for the domain.",
        "fields": {}
      },
      "allowance": {
        "description": "Returns the remaining number of tokens that `spender` is allowed to spend on behalf of `owner`.",
        "fields": {
          "owner": "_owner",
          "spender": "_spender"
        }
      },
      "balanceOf": {
        "description": "Returns the number of tokens held by `account`.",
        "fields": {
          "account": "_account"
        }
      },
      "cap": {
        "description": "Returns the maximum number of tokens that can be minted.",
        "fields": {}
      },
      "checkpoints": {
        "description": "Returns the number of votes at a specific block for an address.",
        "fields": {
          "account": "_account",
          "blockNumber": "_blockNumber"
        }
      },
      "decimals": {
        "description": "Returns the number of decimal places used for token amounts.",
        "fields": {}
      },
      "delegates": {
        "description": "Returns the delegate address for `delegator`.",
        "fields": {
          "delegator": "_delegator"
        }
      },
      "getCurrentVotes": {
        "description": "Returns the current number of votes for `account`.",
        "fields": {
          "account": "_account"
        }
      },
      "getPriorVotes": {
        "description": "Returns the number of votes for `account` at a specific block.",
        "fields": {
          "account": "_account",
          "blockNumber": "_blockNumber"
        }
      },
      "name": {
        "description": "Returns the name of the token.",
        "fields": {}
      },
      "nonces": {
        "description": "Returns the current nonce for `account`.",
        "fields": {
          "account": "_account"
        }
      },
      "numCheckpoints": {
        "description": "Returns the number of checkpoints for an address.",
        "fields": {
          "account": "_account"
        }
      },
      "owner": {
        "description": "Returns the current owner of the contract.",
        "fields": {}
      },
      "renounceOwnership": {
        "description": "Renounces ownership of the contract.",
        "fields": {}
      },
      "symbol": {
        "description": "Returns the symbol of the token.",
        "fields": {}
      },
      "totalSupply": {
        "description": "Returns the total supply of tokens.",
        "fields": {}
      },
      "transferOwnership": {
        "description": "Transfers ownership of the contract to `newOwner`.",
        "fields": {
          "newOwner": "_newOwner"
        }
      },
      "version": {
        "description": "Returns the version of the contract.",
        "fields": {}
      }
    }
  }
  
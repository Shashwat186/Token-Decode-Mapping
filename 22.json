{
  "transfer_functions": {
    "transferProxyOwnership": {
      "description": "Transfers the ownership of the proxy contract to a new address.",
      "fields": {
        "newOwner": "_newOwner"
      }
    }
  },
  "other_functions": {
    "upgradeTo": {
      "description": "Upgrades the contract to a new implementation.",
      "fields": {
        "implementation": "_newImplementation"
      }
    },
    "upgradeToAndCall": {
      "description": "Upgrades the contract to a new implementation and executes a function call.",
      "fields": {
        "implementation": "_newImplementation",
        "data": "_data"
      }
    },
    "implementation": {
      "description": "Returns the current implementation address.",
      "fields": {}
    },
    "proxyOwner": {
      "description": "Returns the current owner of the proxy contract.",
      "fields": {}
    },
    "constructor": {
      "description": "Initializes the contract with no specific inputs required.",
      "fields": {}
    },
    "fallback": {
      "description": "Fallback function to receive Ether.",
      "fields": {}
    }
  },
  "events": {
    "ProxyOwnershipTransferred": {
      "description": "Emitted when the ownership of the proxy contract is transferred.",
      "fields": {
        "previousOwner": "_previousOwner",
        "newOwner": "_newOwner"
      }
    },
    "Upgraded": {
      "description": "Emitted when the contract is upgraded to a new implementation.",
      "fields": {
        "implementation": "_implementation"
      }
    }
  }
}

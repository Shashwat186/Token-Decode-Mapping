{
  "transfer_functions": {
    "upgradeTo": {
      "description": "Upgrades the implementation address of the proxy.",
      "fields": {
        "implementation": "_implementation"
      }
    },
    "upgradeToAndCall": {
      "description": "Upgrades the implementation address of the proxy and optionally executes a function on the new implementation.",
      "fields": {
        "implementation": "_implementation",
        "data": "_data"
      }
    },
    "transferProxyOwnership": {
      "description": "Transfers ownership of the proxy to a new address.",
      "fields": {
        "newOwner": "_newOwner"
      }
    }
  },
  "other_functions": {
    "proxyOwner": {
      "description": "Returns the address of the current proxy owner.",
      "fields": {}
    },
    "implementation": {
      "description": "Returns the address of the current implementation.",
      "fields": {}
    },
    "constructor": {
      "description": "Constructor function that initializes the contract.",
      "fields": {}
    },
    "fallback": {
      "description": "Fallback function that receives Ether and forwards it to the implementation address.",
      "fields": {}
    }
  },
    "ProxyOwnershipTransferred": {
      "description": "Emitted when ownership of the proxy is transferred.",
      "fields": {
        "previousOwner": "_previousOwner",
        "newOwner": "_newOwner"
      }
    },
    "Upgraded": {
      "description": "Emitted when the implementation address is upgraded.",
      "fields": {
        "implementation": "_implementation"
      }
    }
  }

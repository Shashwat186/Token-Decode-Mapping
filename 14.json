{
  "transfer_functions": {
    "transfer": {
      "description": "Transfers a specified amount of tokens to a given address.",
      "fields": {
        "dst": "_dst",
        "rawAmount": "_rawAmount"
      }
    },
    "transferFrom": {
      "description": "Transfers a specified amount of tokens from one address to another on behalf of the owner.",
      "fields": {
        "src": "_src",
        "dst": "_dst",
        "rawAmount": "_rawAmount"
      }
    },
    "approve": {
      "description": "Sets the amount of tokens that a spender is allowed to withdraw from the owner's account.",
      "fields": {
        "spender": "_spender",
        "rawAmount": "_rawAmount"
      }
    },
    "permit": {
      "description": "Allows a spender to withdraw tokens from an owner's account via a signed permit.",
      "fields": {
        "owner": "_owner",
        "spender": "_spender",
        "rawAmount": "_rawAmount",
        "deadline": "_deadline",
        "v": "_v",
        "r": "_r",
        "s": "_s"
      }
    },
    "mint": {
      "description": "Mints a specified amount of new tokens to a given address.",
      "fields": {
        "dst": "_dst",
        "rawAmount": "_rawAmount"
      }
    }
  },
  "other_functions": {
    "constructor": {
      "description": "Initializes the contract with the given parameters.",
      "fields": {
        "account": "_account",
        "minter_": "_minter_",
        "mintingAllowedAfter_": "_mintingAllowedAfter_"
      }
    },
    "DELEGATION_TYPEHASH": {
      "description": "Returns the type hash for delegations.",
      "fields": {}
    },
    "DOMAIN_TYPEHASH": {
      "description": "Returns the domain type hash for EIP712.",
      "fields": {}
    },
    "PERMIT_TYPEHASH": {
      "description": "Returns the type hash for permit.",
      "fields": {}
    },
    "allowance": {
      "description": "Returns the amount of tokens a spender is allowed to withdraw from an owner's account.",
      "fields": {
        "account": "_account",
        "spender": "_spender"
      }
    },
    "balanceOf": {
      "description": "Returns the balance of a given account.",
      "fields": {
        "account": "_account"
      }
    },
    "checkpoints": {
      "description": "Returns the voting checkpoints for a given account and block number.",
      "fields": {
        "account": "_account",
        "blockNumber": "_blockNumber"
      }
    },
    "decimals": {
      "description": "Returns the number of decimal places used by the token.",
      "fields": {}
    },
    "delegate": {
      "description": "Delegates voting power to a specified address.",
      "fields": {
        "delegatee": "_delegatee"
      }
    },
    "delegateBySig": {
      "description": "Delegates voting power to a specified address via a signed message.",
      "fields": {
        "delegatee": "_delegatee",
        "nonce": "_nonce",
        "expiry": "_expiry",
        "v": "_v",
        "r": "_r",
        "s": "_s"
      }
    },
    "delegates": {
      "description": "Returns the address to which the voting power is delegated for a given account.",
      "fields": {
        "account": "_account"
      }
    },
    "getCurrentVotes": {
      "description": "Returns the current voting power of a given account.",
      "fields": {
        "account": "_account"
      }
    },
    "getPriorVotes": {
      "description": "Returns the voting power of a given account at a specific block number.",
      "fields": {
        "account": "_account",
        "blockNumber": "_blockNumber"
      }
    },
    "minimumTimeBetweenMints": {
      "description": "Returns the minimum time required between mints.",
      "fields": {}
    },
    "mintCap": {
      "description": "Returns the cap on the number of tokens that can be minted.",
      "fields": {}
    },
    "minter": {
      "description": "Returns the current minter address.",
      "fields": {}
    },
    "mintingAllowedAfter": {
      "description": "Returns the timestamp after which minting is allowed.",
      "fields": {}
    },
    "name": {
      "description": "Returns the name of the token.",
      "fields": {}
    },
    "nonces": {
      "description": "Returns the current nonce for a given account.",
      "fields": {
        "account": "_account"
      }
    },
    "numCheckpoints": {
      "description": "Returns the number of checkpoints for a given account.",
      "fields": {
        "account": "_account"
      }
    },
    "setMinter": {
      "description": "Sets a new minter address.",
      "fields": {
        "minter_": "_minter_"
      }
    },
    "symbol": {
      "description": "Returns the symbol of the token.",
      "fields": {}
    },
    "totalSupply": {
      "description": "Returns the total supply of tokens.",
      "fields": {}
    }
  }
}

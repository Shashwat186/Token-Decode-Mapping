{
  "transfer_functions": {
    "transfer": {
      "description": "Transfers tokens to the specified address.",
      "fields": {
        "to": "_to",
        "amount": "_amount"
      }
    },
    "transferFrom": {
      "description": "Transfers tokens from one address to another on behalf of the owner.",
      "fields": {
        "from": "_from",
        "to": "_to",
        "amount": "_amount"
      }
    },
    "approve": {
      "description": "Approves the specified address to spend a certain amount of tokens on behalf of the caller.",
      "fields": {
        "spender": "_spender",
        "amount": "_amount"
      }
    },
    "approveAndCall": {
      "description": "Approves the specified address to spend a certain amount of tokens and calls a function on the spender.",
      "fields": {
        "spender": "_spender",
        "amount": "_amount",
        "extraData": "_extraData"
      }
    },
    "generateTokens": {
      "description": "Generates new tokens and assigns them to the specified address.",
      "fields": {
        "owner": "_owner",
        "amount": "_amount"
      }
    },
    "destroyTokens": {
      "description": "Destroys tokens from the specified address.",
      "fields": {
        "owner": "_owner",
        "amount": "_amount"
      }
    }
  },
  "other_functions": {
    "name": {
      "description": "Returns the name of the token.",
      "fields": {}
    },
    "symbol": {
      "description": "Returns the symbol of the token.",
      "fields": {}
    },
    "decimals": {
      "description": "Returns the number of decimals used by the token.",
      "fields": {}
    },
    "totalSupply": {
      "description": "Returns the total supply of tokens.",
      "fields": {}
    },
    "balanceOf": {
      "description": "Returns the balance of the specified address.",
      "fields": {
        "owner": "_owner"
      }
    },
    "balanceOfAt": {
      "description": "Returns the balance of the specified address at a given block number.",
      "fields": {
        "owner": "_owner",
        "blockNumber": "_blockNumber"
      }
    },
    "totalSupplyAt": {
      "description": "Returns the total supply of tokens at a given block number.",
      "fields": {
        "blockNumber": "_blockNumber"
      }
    },
    "transfersEnabled": {
      "description": "Returns whether transfers are enabled.",
      "fields": {}
    },
    "createCloneToken": {
      "description": "Creates a new clone token with specified parameters.",
      "fields": {
        "cloneTokenName": "_cloneTokenName",
        "cloneDecimalUnits": "_cloneDecimalUnits",
        "cloneTokenSymbol": "_cloneTokenSymbol",
        "snapshotBlock": "_snapshotBlock",
        "transfersEnabled": "_transfersEnabled"
      }
    },
    "parentToken": {
      "description": "Returns the address of the parent token.",
      "fields": {}
    },
    "parentSnapShotBlock": {
      "description": "Returns the block number of the parent snapshot.",
      "fields": {}
    },
    "changeController": {
      "description": "Changes the controller of the contract.",
      "fields": {
        "newController": "_newController"
      }
    },
    "enableTransfers": {
      "description": "Enables or disables transfers.",
      "fields": {
        "transfersEnabled": "_transfersEnabled"
      }
    },
    "controller": {
      "description": "Returns the address of the current controller.",
      "fields": {}
    },
    "tokenFactory": {
      "description": "Returns the address of the token factory.",
      "fields": {}
    },
    "version": {
      "description": "Returns the version of the contract.",
      "fields": {}
    },
    "fallback": {
      "description": "Fallback function to receive Ether.",
      "fields": {}
    },
    "constructor": {
      "description": "Initializes the contract with the given token factory and initial owner.",
      "fields": {
        "tokenFactory": "_tokenFactory",
        "initialOwner": "initialOwner"
      }
    }
  },
  "events": {
    "ClaimedTokens": {
      "description": "Emitted when tokens are claimed.",
      "fields": {
        "token": "_token",
        "controller": "_controller",
        "amount": "_amount"
      }
    },
    "Transfer": {
      "description": "Emitted when tokens are transferred.",
      "fields": {
        "from": "_from",
        "to": "_to",
        "amount": "_amount"
      }
    },
    "NewCloneToken": {
      "description": "Emitted when a new clone token is created.",
      "fields": {
        "cloneToken": "_cloneToken",
        "snapshotBlock": "_snapshotBlock"
      }
    },
    "Approval": {
      "description": "Emitted when an approval is made.",
      "fields": {
        "owner": "_owner",
        "spender": "_spender",
        "amount": "_amount"
      }
    },
    "ControlTransferred": {
      "description": "Emitted when the control is transferred.",
      "fields": {
        "previousControler": "_previousControler",
        "newController": "_newController"
      }
    }
  }
}

{
  "transfer_functions": {
    "approve": {
      "description": "Allows the spender to withdraw from the caller's account, multiple times, up to the specified amount.",
      "fields": {
        "_spender": "_spender",
        "_value": "_value"
      }
    },
    "transferFrom": {
      "description": "Transfers tokens from one address to another using an allowance mechanism.",
      "fields": {
        "_from": "_from",
        "_to": "_to",
        "_value": "_value"
      }
    },
    "transfer": {
      "description": "Transfers a specified amount of tokens to a given address.",
      "fields": {
        "_to": "_to",
        "_value": "_value"
      }
    },
    "deprecate": {
      "description": "Marks the contract as deprecated, setting a new upgraded contract address.",
      "fields": {
        "_upgradedAddress": "_upgradedAddress"
      }
    },
    "setParams": {
      "description": "Sets new fee parameters for transfers, including basis points and maximum fees.",
      "fields": {
        "newBasisPoints": "newBasisPoints",
        "newMaxFee": "newMaxFee"
      }
    },
    "issue": {
      "description": "Mints new tokens and adds them to the total supply.",
      "fields": {
        "amount": "amount"
      }
    },
    "redeem": {
      "description": "Burns tokens from the total supply, reducing the overall supply.",
      "fields": {
        "amount": "amount"
      }
    },
    "destroyBlackFunds": {
      "description": "Destroys the funds of a blacklisted address.",
      "fields": {
        "_blackListedUser": "_blackListedUser"
      }
    },
    "transferOwnership": {
      "description": "Transfers ownership of the contract to a new address.",
      "fields": {
        "newOwner": "newOwner"
      }
    },
    "addBlackList": {
      "description": "Adds an address to the blacklist.",
      "fields": {
        "_evilUser": "_evilUser"
      }
    },
    "removeBlackList": {
      "description": "Removes an address from the blacklist.",
      "fields": {
        "_clearedUser": "_clearedUser"
      }
    }
  },
  "other_functions": {
    "name": {
      "description": "Returns the name of the token.",
      "fields": {}
    },
    "symbol": {
      "description": "Returns the symbol of the token.",
      "fields": {}
    },
    "decimals": {
      "description": "Returns the number of decimal places the token uses.",
      "fields": {}
    },
    "totalSupply": {
      "description": "Returns the total supply of tokens.",
      "fields": {}
    },
    "_totalSupply": {
      "description": "Returns the internal total supply of tokens.",
      "fields": {}
    },
    "balanceOf": {
      "description": "Returns the balance of the specified address.",
      "fields": {
        "who": "who"
      }
    },
    "allowance": {
      "description": "Returns the remaining number of tokens that the spender is allowed to spend from the owner's account.",
      "fields": {
        "_owner": "_owner",
        "_spender": "_spender"
      }
    },
    "upgradedAddress": {
      "description": "Returns the address of the upgraded contract, if any.",
      "fields": {}
    },
    "deprecated": {
      "description": "Indicates whether the contract is deprecated.",
      "fields": {}
    },
    "paused": {
      "description": "Returns whether the contract is currently paused.",
      "fields": {}
    },
    "getOwner": {
      "description": "Returns the address of the owner.",
      "fields": {}
    },
    "owner": {
      "description": "Returns the current owner's address.",
      "fields": {}
    },
    "getBlackListStatus": {
      "description": "Checks if a specified address is blacklisted.",
      "fields": {
        "_maker": "_maker"
      }
    },
    "isBlackListed": {
      "description": "Returns whether the specified address is blacklisted.",
      "fields": {
        "": ""
      }
    },
    "balances": {
      "description": "Returns the balance of a specific address.",
      "fields": {
        "": ""
      }
    },
    "allowed": {
      "description": "Returns the allowance that one address has on another.",
      "fields": {
        "": ""
      }
    },
    "maximumFee": {
      "description": "Returns the maximum transaction fee allowed.",
      "fields": {}
    },
    "basisPointsRate": {
      "description": "Returns the fee basis points rate.",
      "fields": {}
    },
    "MAX_UINT": {
      "description": "Returns the maximum possible uint256 value.",
      "fields": {}
    },
    "pause": {
      "description": "Pauses the contract, preventing any token transfers.",
      "fields": {}
    },
    "unpause": {
      "description": "Unpauses the contract, allowing token transfers to resume.",
      "fields": {}
    }
  }
}

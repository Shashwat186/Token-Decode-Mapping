{
    "transfer_functions": {
      "approve": {
        "description": "Allows a spender to withdraw from the caller’s account up to the amount specified.",
        "fields": {
          "spender": "_spender",
          "amount": "_value"
        }
      },
      "transfer": {
        "description": "Transfers tokens directly from the caller’s address to another address.",
        "fields": {
          "recipient": "_to",
          "amount": "_value"
        }
      },
      "transferFrom": {
        "description": "Transfers tokens from one address to another on behalf of the sender.",
        "fields": {
          "sender": "_from",
          "recipient": "_to",
          "amount": "_value"
        }
      }
    },
    "other_functions": {
      "burn": {
        "description": "Burns a specified amount of tokens from the caller’s address.",
        "fields": {
          "amount": "_amount"
        }
      },
      "burnFrom": {
        "description": "Burns a specified amount of tokens from an address, using the allowance mechanism.",
        "fields": {
          "account": "_account",
          "amount": "_amount"
        }
      },
      "cosmosDenom": {
        "description": "Returns the current Cosmos denomination.",
        "fields": {}
      },
      "decimals": {
        "description": "Returns the number of decimals used in the token.",
        "fields": {}
      },
      "decreaseAllowance": {
        "description": "Decreases the allowance of a spender by a specified amount.",
        "fields": {
          "spender": "_spender",
          "subtractedValue": "_value"
        }
      },
      "getRoleAdmin": {
        "description": "Returns the admin role that controls a specified role.",
        "fields": {
          "role": "_role"
        }
      },
      "grantRole": {
        "description": "Grants a specified role to an account.",
        "fields": {
          "role": "_role",
          "account": "_account"
        }
      },
      "hasRole": {
        "description": "Checks if an account has a specified role.",
        "fields": {
          "role": "_role",
          "account": "_account"
        }
      },
      "increaseAllowance": {
        "description": "Increases the allowance of a spender by a specified amount.",
        "fields": {
          "spender": "_spender",
          "addedValue": "_value"
        }
      },
      "mint": {
        "description": "Mints new tokens and assigns them to an account.",
        "fields": {
          "user": "_user",
          "amount": "_amount"
        }
      },
      "name": {
        "description": "Returns the name of the token.",
        "fields": {}
      },
      "renounceRole": {
        "description": "Renounces a specified role from an account.",
        "fields": {
          "role": "_role",
          "account": "_account"
        }
      },
      "revokeRole": {
        "description": "Revokes a specified role from an account.",
        "fields": {
          "role": "_role",
          "account": "_account"
        }
      },
      "setDenom": {
        "description": "Sets the Cosmos denomination.",
        "fields": {
          "denom": "_denom"
        }
      },
      "supportsInterface": {
        "description": "Checks if the contract implements a specified interface.",
        "fields": {
          "interfaceId": "_interfaceId"
        }
      },
      "symbol": {
        "description": "Returns the symbol of the token.",
        "fields": {}
      },
      "totalSupply": {
        "description": "Returns the total supply of tokens.",
        "fields": {}
      }
    }
  }
  
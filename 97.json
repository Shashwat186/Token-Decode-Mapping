{
    "transfer_functions": {
      "transfer": {
        "description": "Transfers a specified amount of tokens to a given address.",
        "fields": {
          "to": "_to",
          "amount": "_amount"
        }
      },
      "transferFrom": {
        "description": "Transfers a specified amount of tokens from one address to another.",
        "fields": {
          "from": "_from",
          "to": "_to",
          "amount": "_amount"
        }
      },
      "approve": {
        "description": "Approves a spender to withdraw a specified amount of tokens from the owner's account.",
        "fields": {
          "spender": "_spender",
          "amount": "_amount"
        }
      },
      "increaseAllowance": {
        "description": "Increases the allowance of a spender by a specified amount.",
        "fields": {
          "spender": "_spender",
          "addedValue": "_addedValue"
        }
      },
      "decreaseAllowance": {
        "description": "Decreases the allowance of a spender by a specified amount.",
        "fields": {
          "spender": "_spender",
          "subtractedValue": "_subtractedValue"
        }
      }
    },
    "other_functions": {
      "constructor": {
        "description": "Initializes the contract with given parameters.",
        "fields": {
          "allowlistFrom": "_allowlistFrom",
          "allowlistTo": "_allowlistTo",
          "unlockTimestamp": "_unlockTimestamp"
        }
      },
      "DEFAULT_ADMIN_ROLE": {
        "description": "Returns the default admin role.",
        "fields": {}
      },
      "INVOKE_ECHELON_CONFIGURATION_ROLE": {
        "description": "Returns the role for invoking echelon configuration.",
        "fields": {}
      },
      "NAME": {
        "description": "Returns the name of the token.",
        "fields": {}
      },
      "SYMBOL": {
        "description": "Returns the symbol of the token.",
        "fields": {}
      },
      "SUPPLY": {
        "description": "Returns the total supply of the token.",
        "fields": {}
      },
      "UNLOCK_ROLE": {
        "description": "Returns the unlock role.",
        "fields": {}
      },
      "unlocked": {
        "description": "Checks if the contract is unlocked.",
        "fields": {}
      },
      "totalSupply": {
        "description": "Returns the total supply of tokens.",
        "fields": {}
      },
      "balanceOf": {
        "description": "Returns the balance of a specified address.",
        "fields": {
          "account": "_account"
        }
      },
      "allowance": {
        "description": "Returns the remaining amount of tokens that a spender is allowed to withdraw from an owner's account.",
        "fields": {
          "owner": "_owner",
          "spender": "_spender"
        }
      },
      "burn": {
        "description": "Burns a specified amount of tokens from the caller's account.",
        "fields": {
          "amount": "_amount"
        }
      },
      "burnFrom": {
        "description": "Burns a specified amount of tokens from a specified account.",
        "fields": {
          "account": "_account",
          "amount": "_amount"
        }
      },
      "decimals": {
        "description": "Returns the number of decimal places for the token.",
        "fields": {}
      },
      "executeUnlock": {
        "description": "Executes the unlock process.",
        "fields": {}
      },
      "getRoleAdmin": {
        "description": "Returns the admin role for a given role.",
        "fields": {
          "role": "_role"
        }
      },
      "grantRole": {
        "description": "Grants a role to a specified account.",
        "fields": {
          "role": "_role",
          "account": "_account"
        }
      },
      "hasRole": {
        "description": "Checks if an account has a specific role.",
        "fields": {
          "role": "_role",
          "account": "_account"
        }
      },
      "revokeRole": {
        "description": "Revokes a role from a specified account.",
        "fields": {
          "role": "_role",
          "account": "_account"
        }
      },
      "isAllowlistFrom": {
        "description": "Checks if an address is on the allowlist from.",
        "fields": {
          "address": "_address"
        }
      },
      "isAllowlistTo": {
        "description": "Checks if an address is on the allowlist to.",
        "fields": {
          "address": "_address"
        }
      },
      "name": {
        "description": "Returns the name of the contract.",
        "fields": {}
      },
      "symbol": {
        "description": "Returns the symbol of the contract.",
        "fields": {}
      },
      "toggleAllowlistFrom": {
        "description": "Toggles the status of an address on the allowlist from.",
        "fields": {
          "allowlistAddresses": "_allowlistAddresses",
          "toggle": "_toggle"
        }
      },
      "toggleAllowlistTo": {
        "description": "Toggles the status of an address on the allowlist to.",
        "fields": {
          "allowlistAddresses": "_allowlistAddresses",
          "toggle": "_toggle"
        }
      },
      "echelonGateways": {
        "description": "Returns the echelon gateway information for a given address.",
        "fields": {
          "address": "_address"
        }
      },
      "invokeEchelon": {
        "description": "Invokes an echelon process with specified parameters.",
        "fields": {
          "handlerAddress": "_handlerAddress",
          "id": "_id",
          "primeValue": "_primeValue",
          "data": "_data"
        }
      },
      "addEchelonHandlerContract": {
        "description": "Adds a new echelon handler contract.",
        "fields": {
          "contractAddress": "_contractAddress",
          "ethDestinationAddress": "_ethDestinationAddress",
          "primeDestinationAddress": "_primeDestinationAddress"
        }
      },
      "supportsInterface": {
        "description": "Checks if the contract supports a specific interface.",
        "fields": {
          "interfaceId": "_interfaceId"
        }
      }
    }
  }
  
{
  "transfer_functions": {
    "transfer": {
      "description": "Transfers a specified amount of tokens to the recipient.",
      "fields": {
        "recipient": "_recipient",
        "amount": "_amount"
      }
    },
    "transferFrom": {
      "description": "Transfers a specified amount of tokens from the sender to the recipient using the sender's allowance.",
      "fields": {
        "sender": "_sender",
        "recipient": "_recipient",
        "amount": "_amount"
      }
    },
    "approve": {
      "description": "Sets the allowance of the spender to withdraw tokens from the owner's account.",
      "fields": {
        "spender": "_spender",
        "amount": "_amount"
      }
    },
    "increaseAllowance": {
      "description": "Increases the allowance of the spender.",
      "fields": {
        "spender": "_spender",
        "addedValue": "_addedValue"
      }
    },
    "decreaseAllowance": {
      "description": "Decreases the allowance of the spender.",
      "fields": {
        "spender": "_spender",
        "subtractedValue": "_subtractedValue"
      }
    }
  },
  "other_functions": {
    "constructor": {
      "description": "Initializes the contract with the given total supply.",
      "fields": {
        "_totalSupply": "_totalSupply"
      }
    },
    "blacklist": {
      "description": "Adds or removes an address from the blacklist.",
      "fields": {
        "_address": "_address",
        "_isBlacklisting": "_isBlacklisting"
      }
    },
    "balanceOf": {
      "description": "Returns the balance of the specified account.",
      "fields": {
        "account": "_account"
      }
    },
    "allowance": {
      "description": "Returns the remaining number of tokens that the spender is allowed to withdraw from the owner's account.",
      "fields": {
        "owner": "_owner",
        "spender": "_spender"
      }
    },
    "burn": {
      "description": "Burns a specified amount of tokens from the caller's account.",
      "fields": {
        "value": "_value"
      }
    },
    "decimals": {
      "description": "Returns the number of decimals used by the token.",
      "fields": {}
    },
    "limited": {
      "description": "Returns whether the token is subject to holding limits.",
      "fields": {}
    },
    "maxHoldingAmount": {
      "description": "Returns the maximum holding amount allowed.",
      "fields": {}
    },
    "minHoldingAmount": {
      "description": "Returns the minimum holding amount required.",
      "fields": {}
    },
    "name": {
      "description": "Returns the name of the token.",
      "fields": {}
    },
    "symbol": {
      "description": "Returns the symbol of the token.",
      "fields": {}
    },
    "totalSupply": {
      "description": "Returns the total supply of the token.",
      "fields": {}
    },
    "owner": {
      "description": "Returns the address of the current owner of the contract.",
      "fields": {}
    },
    "renounceOwnership": {
      "description": "Renounces ownership of the contract.",
      "fields": {}
    },
    "transferOwnership": {
      "description": "Transfers ownership of the contract to a new address.",
      "fields": {
        "newOwner": "_newOwner"
      }
    },
    "setRule": {
      "description": "Sets rules for token holding limits and Uniswap pair address.",
      "fields": {
        "_limited": "_limited",
        "_uniswapV2Pair": "_uniswapV2Pair",
        "_maxHoldingAmount": "_maxHoldingAmount",
        "_minHoldingAmount": "_minHoldingAmount"
      }
    },
    "uniswapV2Pair": {
      "description": "Returns the address of the Uniswap V2 pair contract.",
      "fields": {}
    }
  },
  "events": {
    "Approval": {
      "description": "Emitted when an approval is made.",
      "fields": {
        "owner": "_owner",
        "spender": "_spender",
        "value": "_value"
      }
    },
    "OwnershipTransferred": {
      "description": "Emitted when ownership is transferred.",
      "fields": {
        "previousOwner": "_previousOwner",
        "newOwner": "_newOwner"
      }
    },
    "Transfer": {
      "description": "Emitted when a transfer of tokens occurs.",
      "fields": {
        "from": "_from",
        "to": "_to",
        "value": "_value"
      }
    }
  }
}

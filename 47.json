{
  "transfer_functions": {
    "approve": {
      "parameters": {
        "spender": "address",
        "rawAmount": "uint256"
      },
      "description": "Allows a spender to withdraw a specified amount of tokens from the caller's account."
    },
    "transfer": {
      "parameters": {
        "dst": "address",
        "rawAmount": "uint256"
      },
      "description": "Transfers tokens from the caller's account to the specified address."
    },
    "transferFrom": {
      "parameters": {
        "src": "address",
        "dst": "address",
        "rawAmount": "uint256"
      },
      "description": "Transfers tokens from one address to another using the allowance mechanism."
    },
    "mint": {
      "parameters": {
        "account": "address",
        "rawAmount": "uint256"
      },
      "description": "Mints new tokens and adds them to the specified account's balance."
    },
    "enableTransfer": {
      "parameters": {},
      "description": "Enables token transfers."
    },
    "updateTrancheBalance": {
      "parameters": {
        "beneficiary": "address",
        "rawAmount": "uint256",
        "investorType": "enum IOndo.InvestorType"
      },
      "description": "Updates the tranche balance for a specified beneficiary."
    }
  },
  "other_functions": {
    "DEFAULT_ADMIN_ROLE": {
      "parameters": {},
      "description": "Returns the default admin role identifier."
    },
    "DELEGATION_TYPEHASH": {
      "parameters": {},
      "description": "Returns the type hash for delegation."
    },
    "DOMAIN_TYPEHASH": {
      "parameters": {},
      "description": "Returns the domain type hash."
    },
    "MINTER_ROLE": {
      "parameters": {},
      "description": "Returns the minter role identifier."
    },
    "TIMELOCK_UPDATE_ROLE": {
      "parameters": {},
      "description": "Returns the timelock update role identifier."
    },
    "TRANSFER_ROLE": {
      "parameters": {},
      "description": "Returns the transfer role identifier."
    },
    "allowance": {
      "parameters": {
        "account": "address",
        "spender": "address"
      },
      "description": "Returns the remaining amount of tokens that the spender is allowed to spend from the account's balance."
    },
    "balanceOf": {
      "parameters": {
        "account": "address"
      },
      "description": "Returns the balance of tokens held by the specified address."
    },
    "checkpoints": {
      "parameters": {
        "address": "address",
        "uint32": "uint32"
      },
      "description": "Returns the checkpoint information for the specified address."
    },
    "cliffTimestamp": {
      "parameters": {},
      "description": "Returns the cliff timestamp."
    },
    "decimals": {
      "parameters": {},
      "description": "Returns the number of decimal places used to represent the token."
    },
    "delegate": {
      "parameters": {
        "delegatee": "address"
      },
      "description": "Delegates votes to the specified address."
    },
    "delegateBySig": {
      "parameters": {
        "delegatee": "address",
        "nonce": "uint256",
        "expiry": "uint256",
        "v": "uint8",
        "r": "bytes32",
        "s": "bytes32"
      },
      "description": "Delegates votes by signature."
    },
    "delegates": {
      "parameters": {
        "address": "address"
      },
      "description": "Returns the delegate address for the specified address."
    },
    "getCurrentVotes": {
      "parameters": {
        "account": "address"
      },
      "description": "Returns the current vote count for the specified address."
    },
    "getFreedBalance": {
      "parameters": {
        "account": "address"
      },
      "description": "Returns the freed balance for the specified address."
    },
    "getPriorVotes": {
      "parameters": {
        "account": "address",
        "blockNumber": "uint256"
      },
      "description": "Returns the prior vote count for the specified address at the specified block number."
    },
    "getRoleAdmin": {
      "parameters": {
        "role": "bytes32"
      },
      "description": "Returns the admin role for the specified role."
    },
    "getVestedBalance": {
      "parameters": {
        "account": "address"
      },
      "description": "Returns the vested balance for the specified address."
    },
    "grantRole": {
      "parameters": {
        "role": "bytes32",
        "account": "address"
      },
      "description": "Grants the specified role to the specified account."
    },
    "hasRole": {
      "parameters": {
        "role": "bytes32",
        "account": "address"
      },
      "description": "Checks if the specified account has the specified role."
    },
    "name": {
      "parameters": {},
      "description": "Returns the name of the token."
    },
    "nonces": {
      "parameters": {
        "address": "address"
      },
      "description": "Returns the nonce for the specified address."
    },
    "numCheckpoints": {
      "parameters": {
        "address": "address"
      },
      "description": "Returns the number of checkpoints for the specified address."
    },
    "passedAllVestingPeriods": {
      "parameters": {},
      "description": "Checks if all vesting periods have passed."
    },
    "passedCliff": {
      "parameters": {},
      "description": "Checks if the cliff period has passed."
    },
    "renounceRole": {
      "parameters": {
        "role": "bytes32",
        "account": "address"
      },
      "description": "Renounces the specified role for the specified account."
    },
    "revokeRole": {
      "parameters": {
        "role": "bytes32",
        "account": "address"
      },
      "description": "Revokes the specified role from the specified account."
    },
    "seedVestingPeriod": {
      "parameters": {},
      "description": "Returns the seed vesting period."
    },
    "supportsInterface": {
      "parameters": {
        "interfaceId": "bytes4"
      },
      "description": "Checks if the contract supports the specified interface."
    },
    "symbol": {
      "parameters": {},
      "description": "Returns the symbol of the token."
    },
    "totalSupply": {
      "parameters": {},
      "description": "Returns the total supply of tokens."
    },
    "tranche1VestingPeriod": {
      "parameters": {},
      "description": "Returns the tranche 1 vesting period."
    },
    "tranche2VestingPeriod": {
      "parameters": {},
      "description": "Returns the tranche 2 vesting period."
    },
    "updateCliffTimestamp": {
      "parameters": {
        "newTimestamp": "uint256"
      },
      "description": "Updates the cliff timestamp."
    }
  }
}

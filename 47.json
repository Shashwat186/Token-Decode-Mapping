{
  "transfer_functions": {
    "transfer": {
      "description": "Transfers tokens from the caller to the specified recipient.",
      "fields": {
        "recipient": "_recipient",
        "amount": "_amount"
      }
    },
    "transferFrom": {
      "description": "Transfers tokens from one account to another on behalf of the owner.",
      "fields": {
        "sender": "_sender",
        "recipient": "_recipient",
        "amount": "_amount"
      }
    }
  },
  "other_functions": {
    "constructor": {
      "description": "Initializes the contract with the given name and symbol.",
      "fields": {
        "name_": "_name",
        "symbol_": "_symbol"
      }
    },
    "DEFAULT_ADMIN_ROLE": {
      "description": "Returns the default admin role identifier.",
      "fields": {}
    },
    "ERC712_VERSION": {
      "description": "Returns the ERC712 version.",
      "fields": {}
    },
    "PREDICATE_ROLE": {
      "description": "Returns the predicate role identifier.",
      "fields": {}
    },
    "allowance": {
      "description": "Returns the remaining number of tokens that spender is allowed to spend on behalf of the owner.",
      "fields": {
        "owner": "_owner",
        "spender": "_spender"
      }
    },
    "approve": {
      "description": "Sets the amount of tokens that spender is allowed to spend on behalf of the caller.",
      "fields": {
        "spender": "_spender",
        "amount": "_amount"
      }
    },
    "balanceOf": {
      "description": "Returns the token balance of the specified account.",
      "fields": {
        "account": "_account"
      }
    },
    "decimals": {
      "description": "Returns the number of decimals used by the token.",
      "fields": {}
    },
    "decreaseAllowance": {
      "description": "Decreases the amount of tokens that spender is allowed to spend on behalf of the caller.",
      "fields": {
        "spender": "_spender",
        "subtractedValue": "_subtractedValue"
      }
    },
    "executeMetaTransaction": {
      "description": "Executes a meta transaction on behalf of a user.",
      "fields": {
        "userAddress": "_userAddress",
        "functionSignature": "_functionSignature",
        "sigR": "_sigR",
        "sigS": "_sigS",
        "sigV": "_sigV"
      }
    },
    "getChainId": {
      "description": "Returns the chain ID of the blockchain.",
      "fields": {}
    },
    "getDomainSeperator": {
      "description": "Returns the domain separator used in EIP712.",
      "fields": {}
    },
    "getNonce": {
      "description": "Returns the nonce for the specified user address.",
      "fields": {
        "user": "_user"
      }
    },
    "getRoleAdmin": {
      "description": "Returns the admin role of a specific role.",
      "fields": {
        "role": "_role"
      }
    },
    "getRoleMember": {
      "description": "Returns the address of a specific role member at a given index.",
      "fields": {
        "role": "_role",
        "index": "_index"
      }
    },
    "getRoleMemberCount": {
      "description": "Returns the number of members in a specific role.",
      "fields": {
        "role": "_role"
      }
    },
    "grantRole": {
      "description": "Grants a specific role to an account.",
      "fields": {
        "role": "_role",
        "account": "_account"
      }
    },
    "hasRole": {
      "description": "Checks if an account has a specific role.",
      "fields": {
        "role": "_role",
        "account": "_account"
      }
    },
    "increaseAllowance": {
      "description": "Increases the amount of tokens that spender is allowed to spend on behalf of the caller.",
      "fields": {
        "spender": "_spender",
        "addedValue": "_addedValue"
      }
    },
    "mint": {
      "description": "Mints new tokens and assigns them to the specified user.",
      "fields": {
        "user": "_user",
        "amount": "_amount"
      }
    },
    "name": {
      "description": "Returns the name of the token.",
      "fields": {}
    },
    "renounceRole": {
      "description": "Renounces a specific role for the caller.",
      "fields": {
        "role": "_role",
        "account": "_account"
      }
    },
    "revokeRole": {
      "description": "Revokes a specific role from an account.",
      "fields": {
        "role": "_role",
        "account": "_account"
      }
    },
    "symbol": {
      "description": "Returns the symbol of the token.",
      "fields": {}
    },
    "totalSupply": {
      "description": "Returns the total supply of tokens.",
      "fields": {}
    }
  }
}
